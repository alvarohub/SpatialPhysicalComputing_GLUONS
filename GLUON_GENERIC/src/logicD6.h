
/*

Logic function for the module D6
- Ultrasound rangefinder
- Beeper

Operation:

- WHEN: when receiving something on any inlet, or when entering the sensor range
- ACTUATOR: beeps when receiving something on any inlet OR when entering sensor range
- OUT: the output is the value of the sensor value, with event "true" or "false"
(false in case the BANG was generated by inlet data, not by a sensor "event")

*/

#include "BaseLogic.h"

class logicD6 : public BaseLogic {

public:
	logicD6() : BaseLogic("D6") {}

	void init(bool firstTimeBuild) {
		if (firstTimeBuild)
		setUpdateMode(ANY_INLET_BANG | SENSOR_EVENT_BANG);
		else
		loadUpdateMode();
	}

	virtual void compute() override;

private:

};

void logicD6::compute() {
	Data outputData;

	// 1) is this a sensor generated event or new data on some inlet?
	if (sensorArrayPtr->checkEvent()) outputData=(*sensorArrayPtr)[0].getData();
	else { // event generated from inlet:
		// Create the DATA/EVENT to be passed to the OUTLET: I will select the data from the first inlet that has new data
		for (uint8_t i = 0; i < inletArrayPtr->size(); i++) {
			//  select the first inlet that has new data to pass to the output, but set event as FALSE
			if ((*inletArrayPtr)[i].isNewData()) {
				outputData.numericData = (*inletArrayPtr)[i].getData().numericData;
				outputData.event = false;
				break;
			}
		}
	}

	//2) OUTLET:
	outletArrayPtr->setNewData(outputData);

	// 3) ACTUATOR (beeper): beep ALWAYS when entering here:
	outputData.numericData = 128;
	actuatorArrayPtr->setNewData(outputData);

	// set inlet data as used (this is only to control the compute "BANG"):
	inletArrayPtr->setAllInletsDataUsed();

}
